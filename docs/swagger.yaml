definitions:
  handlers.NewBooking:
    properties:
      service_id:
        description: ServiceID is the ID of the service requested.
        type: string
      slot_id:
        description: SlotID is the ID of the slot the user is requesting to be booked
          for.
        type: string
    required:
    - service_id
    - slot_id
    type: object
  handlers.NewItem:
    properties:
      product_id:
        description: ProductID is the id of the product the item represents.
        type: string
      quantity:
        description: Quantity is the number of the product for this order.
        type: integer
    required:
    - product_id
    - quantity
    type: object
  handlers.NewOrder:
    properties:
      delivery_method:
        description: |-
          DeliveryMethod is the method in which the order should be deliver.

          Allowed values are `pending`(default), `paid`, `shipped`, `delivered`, `cancelled`.
        type: string
    required:
    - delivery_method
    type: object
  handlers.NewProduct:
    properties:
      category:
        maxLength: 45
        minLength: 3
        type: string
      description:
        maxLength: 1024
        minLength: 3
        type: string
      image_url:
        maxLength: 255
        minLength: 3
        type: string
      name:
        maxLength: 45
        minLength: 3
        type: string
      price:
        type: number
      stock:
        type: integer
    required:
    - category
    - description
    - image_url
    - name
    - price
    - stock
    type: object
  handlers.NewService:
    properties:
      available:
        description: Available says whether the service is available or not.
        type: boolean
      description:
        description: Description is a brief description of the service.
        maxLength: 1024
        minLength: 5
        type: string
      name:
        description: Name is the name of the service.
        maxLength: 45
        minLength: 3
        type: string
      price:
        description: Price is the cost of the service.
        type: number
    required:
    - available
    - description
    - name
    - price
    type: object
  handlers.PostEmail:
    properties:
      email:
        maxLength: 45
        minLength: 5
        type: string
    required:
    - email
    type: object
  handlers.ResetPassword:
    properties:
      email:
        maxLength: 45
        minLength: 5
        type: string
      new_password:
        maxLength: 45
        minLength: 8
        type: string
      repeat_new_password:
        maxLength: 45
        minLength: 8
        type: string
      reset_token:
        type: string
    required:
    - email
    - new_password
    - repeat_new_password
    - reset_token
    type: object
  handlers.SignInUser:
    properties:
      email:
        description: Email is the user's email.
        maxLength: 45
        minLength: 3
        type: string
      password:
        description: Password is the user's password.
        maxLength: 45
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  handlers.SignUpUser:
    properties:
      address:
        maxLength: 255
        minLength: 3
        type: string
      email:
        maxLength: 45
        minLength: 3
        type: string
      first_name:
        maxLength: 45
        minLength: 3
        type: string
      last_name:
        maxLength: 45
        minLength: 3
        type: string
      password:
        maxLength: 45
        minLength: 8
        type: string
      phone:
        maxLength: 11
        minLength: 8
        type: string
      repeat_password:
        maxLength: 45
        minLength: 8
        type: string
    required:
    - address
    - email
    - first_name
    - last_name
    - password
    - phone
    - repeat_password
    type: object
  handlers.UpdateUser:
    properties:
      address:
        maxLength: 255
        type: string
      email:
        maxLength: 45
        minLength: 5
        type: string
      first_name:
        maxLength: 45
        type: string
      last_name:
        maxLength: 45
        type: string
      phone:
        maxLength: 11
        minLength: 8
        type: string
    required:
    - address
    - email
    - first_name
    - last_name
    - phone
    type: object
info:
  contact:
    email: ecokeke21@gmail.com
    name: API Support
    url: www.cheezaram.tech/contact
paths:
  /admin/bookings:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin retrieves all bookings from the database
      tags:
      - admin
  /admin/bookings/{booking_id}:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the booking to get
        in: path
        name: booking_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin retrieve a booking with given ID from database
      tags:
      - admin
  /admin/bookings/{booking_id}/{status}:
    put:
      description: Allowed status are `pending`(default), `paid`, `fulfilled`, `cancelled`
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of booking to update
        in: path
        name: booking_id
        required: true
        type: string
      - description: New status of the booking
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin update the status of an existing booking.
      tags:
      - admin
  /admin/orders:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin retrieves all orders from the database
      tags:
      - admin
  /admin/orders/{order_id}:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the order to get
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin retrieve an order with given ID from database
      tags:
      - admin
  /admin/orders/{order_id}/{status}:
    put:
      description: Allowed status are `pending`(default), `paid`, `shipped`, `delivered`,
        `cancelled`
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of order to update
        in: path
        name: order_id
        required: true
        type: string
      - description: New status of the order
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin update the status of an existing order.
      tags:
      - admin
  /admin/orders/status/{status}:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Status of orders to retrieve
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin retrieves all orders with given status from the database
      tags:
      - admin
  /admin/products:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.NewProduct'
      produces:
      - application/json
      responses:
        "201":
          description: data, msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the admin add products to the database
      tags:
      - admin
  /admin/products/{product_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Product id to delete
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admins delete a product from the database
      tags:
      - admin
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: The id of the product to update
        in: path
        name: product_id
        required: true
        type: string
      - description: Update Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handlers.NewProduct'
      produces:
      - application/json
      responses:
        "200":
          description: data, msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the admin update the product with given product_id
      tags:
      - admin
  /admin/services:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add service
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/handlers.NewService'
      produces:
      - application/json
      responses:
        "201":
          description: data, msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the admin add services to the database
      tags:
      - admin
  /admin/services/{service_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Service ID to delete
        in: path
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admins delete a service from the database
      tags:
      - admin
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Service ID to update
        in: path
        name: service_id
        required: true
        type: string
      - description: Update service
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/handlers.NewService'
      produces:
      - application/json
      responses:
        "200":
          description: data, msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the admin update the service with given service_id
      tags:
      - admin
  /admin/users/{email}/orders_bookings:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User's email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows admin get all orders and bookings belonging to user with email.
      tags:
      - admin
  /bookings:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows customer retrieves all their bookings from the database
      tags:
      - bookings
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: A new customer booking
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/handlers.NewBooking'
      produces:
      - application/json
      responses:
        "201":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows customer add a new booking.
      tags:
      - bookings
  /bookings/{booking_id}:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the booking to get
        in: path
        name: booking_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows customer retrieve a booking with given ID from database
      tags:
      - bookings
  /cart:
    delete:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the current user all items in their cart.
      tags:
      - cart
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the customer retrieve all the items in their cart
      tags:
      - cart
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: A new item to add to cart
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/handlers.NewItem'
      produces:
      - application/json
      responses:
        "201":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the current user to add a new item to the cart
      tags:
      - cart
  /cart/{item_id}:
    delete:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: The ID of the item to delete
        in: path
        name: item_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the current user delete an item from the cart.
      tags:
      - cart
  /orders:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the customer retrieve all their orders from the database.
      tags:
      - orders
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: A new customer order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/handlers.NewOrder'
      produces:
      - application/json
      responses:
        "201":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the current user place a new order
      tags:
      - orders
  /orders/{order_id}:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the order to get
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows customer retrieve an order with given ID from database
      tags:
      - orders
  /orders/status/{status}:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: The status of orders to retrieve
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the customer retrieve all the orders from the database with
        given status.
      tags:
      - orders
  /products:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieves a list of all product objects
      tags:
      - products
  /products/{product_id}:
    get:
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieves the product with the given ID
      tags:
      - products
  /products/categories/{category}:
    get:
      parameters:
      - description: Product Category
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieves a list of all products in given category
      tags:
      - products
  /reset_password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email body
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/handlers.PostEmail'
      produces:
      - application/json
      responses:
        "201":
          description: reset_token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows to send a request for password update. A token is returned.
      tags:
      - reset_password
    put:
      consumes:
      - application/json
      parameters:
      - description: Reset password
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/handlers.ResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows to send new password details
      tags:
      - reset_password
  /services:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieves a list of all product objects
      tags:
      - services
  /services/{service_id}:
    get:
      parameters:
      - description: Service ID
        in: path
        name: service_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieves the service with the given ID
      tags:
      - services
  /services/trending:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieves a list of the top ten trending services
      tags:
      - services
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Sign user in
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: jwt, msg, user
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Logs a user into their account
      tags:
      - signin
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Add user account
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.SignUpUser'
      produces:
      - application/json
      responses:
        "201":
          description: jwt, msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Add a new user account
      tags:
      - signup
  /super_admin/users/{email}:
    delete:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User's email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows super_admin delete another user's account.
      tags:
      - super_admin
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User's email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows super_admin retrieve another user with given email
      tags:
      - super_admin
  /super_admin/users/{email}/{new_role}:
    put:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User's email
        in: path
        name: email
        required: true
        type: string
      - description: User's new role
        in: path
        name: new_role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg,data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows super_admin update another user's role
      tags:
      - super_admin
  /super_admin/users/admins:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows super_admin retrieve all admins in the database.
      tags:
      - super_admin
  /super_admin/users/customers:
    get:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows super_admin retrieve all customers in the database.
      tags:
      - super_admin
  /users:
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: data,msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the current user update their account information.
      tags:
      - users
  /users/{user_id}:
    delete:
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User's email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: msg
          schema:
            additionalProperties: true
            type: object
        "400":
          description: error
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error
          schema:
            additionalProperties: true
            type: object
      summary: Allows the current user delete their account.
      tags:
      - users
swagger: "2.0"
